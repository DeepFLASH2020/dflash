*********** DeepFLASH **********
This repository contains source code and data of a predictive diffeomorphic image registration (https://arxiv.org/abs/2004.02097).

```
@inproceedings{wang2020deepflash,
  title={DeepFLASH: An Efficient Network for Learning-based Medical Image Registration},
  author={Wang, Jian and Zhang, Miaomiao},
  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},
  pages={4444--4452},
  year={2020}
}
```
********** Disclaimer **********
This software is published for academic and non-commercial use only.

********** DeepFLASH **********
The implementation includes network training, testing and for 2D and 3D medical images. We request you to cite our research paper if you use it:

DeepFLASH: An Efficient Network for Learning-basedMedical Image Registration.
Jian Wang, Miaomiao Zhang. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2020.


********** Setup **********
* [PyTorch 3.4](http://pytorch.org/)
* [PyCA](https://bitbucket.org/scicompanat/pyca) (optional)
* [FLASH] (https://bitbucket.org/FlashC/flashc/src/master/)
* [CUDA 9.0](https://developer.nvidia.com/cuda-downloads)
* [Anaconda 4.3.1](https://anaconda.org)

********** Usage **********
Below is a simple *quickstart* guide on how to use DeepFLASH for predictive registration network training. 
The optimal registration solutions for our network training is generated by FLASH.
You may run the MATLAB preprocess scripts provided in "/DeepFLASH/preprocess/processmhd.m" to generated training data for our network. 
Preprocessed data are included in directory "/DeepFLASH/data/Rnet/" and  "/DeepFLASH/data/Inet" separately. 

cd DeepFLASH/
sh runDeepFLASH.sh 

We take the frequencies from of training data directly in this network. Details can be checked by, 

python3 DeepFLASH_test.py -h 

 --im_src_realpart IM_SRC_REALPART
                        root directory of real parts of source images
  --im_tar_realpart IM_TAR_REALPART
                        root directory of real parts of target images
  --im_vel_realX IM_VEL_REALX
                        root directory of real parts of velocity fields (X
                        direction)
  --im_vel_realY IM_VEL_REALY
                        root directory of real parts of velocity fields (Y
                        direction)
  --im_vel_realZ IM_VEL_REALZ
                        root directory of real parts of velocity fields (Z
                        direction)
  --im_src_imaginarypart IM_SRC_IMAGINARYPART
                        root directory of imaginary parts of source images
  --im_tar_imaginarypart IM_TAR_IMAGINARYPART
                        root directory of imaginary parts of target images
  --im_vel_imagX IM_VEL_IMAGX
                        root directory of imaginary parts of source images (X
                        direction)
  --im_vel_imagY IM_VEL_IMAGY
                        root directory of imaginary parts of velocity fields
                        (Y direction)
  --im_vel_imagZ IM_VEL_IMAGZ
                        root directory of imaginary parts of velocity fields
                        (Z direction)








